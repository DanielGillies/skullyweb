{{> header title="My SKULLY"}}
<style>
::-webkit-input-placeholder { /* WebKit, Blink, Edge */
    color:    #888;
    font-size: 16px;
       font-weight: bold;
}
:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
   color:    #888;
   opacity:  1;
       font-size: 16px;
       font-weight: bold;
}
::-moz-placeholder { /* Mozilla Firefox 19+ */
   color:    #888;
   opacity:  1;
       font-size: 16px;
              font-weight: bold;


}
:-ms-input-placeholder { /* Internet Explorer 10-11 */
   color:    #888;
       font-size: 16px;
       font-weight: bold;

}
div {
    font-family: Rajdhani,Raleway,Helvetica Neue,Helvetica,Arial,sans-serif;
}
</style>
    <link href='https://fonts.googleapis.com/css?family=Rajdhani:400,500,600,700' rel='stylesheet' type='text/css'>
            <div style="width: 100%; height: 100%; padding-top: 4%">
                        <div style="text-align: center; padding-bottom: 24px;">
                            <h3 style="font-family: Rajdhani,Raleway,Helvetica Neue,Helvetica,Arial,sans-serif; font-weight:bold; text-transform: uppercase; margin-bottom: 16px; letter-spacing: 5px;">Apply to Beta Test</h3>
                        </div>
                            <div style="text-align: center;">
                                <form class="form-newsletter" data-success="Thanks for your registration, we will be in touch shortly." data-error="Please enter your email.">
                                    <div style="padding: 0 20%; margin-bottom: 24px; display: flex;">
                                        <div style="width: 70%;">
                                            <input type="text" style="border: 2px gray solid; height: 50px;" name="email" style="float: left; margin-bottom: 0;" class="validate-email validate-required signup-email-field" placeholder="ENTER YOUR EMAIL">
                                        </div>
                                        <div style="width: 25%; margin-left:5%;">
                                            <input type="submit" style="font-size: 16px;" style="margin-bottom: 0; height: 50px;" value="APPLY">
                                        </div>
                                    </div>
                                        <iframe srcdoc="<!-- Begin MailChimp Signup Form --><link href=&quot;https://cdn-images.mailchimp.com/embedcode/classic-081711.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;><style type=&quot;text/css&quot;> #mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif; }   /* Add your own MailChimp form style overrides in your site stylesheet or in this style block.     We recommend moving this block and the preceding CSS link to the HEAD of your HTML file. */</style><div id=&quot;mc_embed_signup&quot;><form action=&quot;//skullysystems.us3.list-manage.com/subscribe/post?u=bc1d6c276527db0df1053fc13&amp;id=ff82cb5526&quot; method=&quot;post&quot; id=&quot;mc-embedded-subscribe-form&quot; name=&quot;mc-embedded-subscribe-form&quot; class=&quot;validate&quot; target=&quot;_blank&quot; novalidate>    <div id=&quot;mc_embed_signup_scroll&quot;>   <h2>Subscribe to our mailing list</h2><div class=&quot;indicates-required&quot;><span class=&quot;asterisk&quot;>*</span> indicates required</div><div class=&quot;mc-field-group&quot;>    <label for=&quot;mce-EMAIL&quot;>Email Address  <span class=&quot;asterisk&quot;>*</span></label>   <input type=&quot;email&quot; value=&quot;&quot; name=&quot;EMAIL&quot; class=&quot;required email&quot; id=&quot;mce-EMAIL&quot;></div><div class=&quot;mc-field-group&quot;>  <label for=&quot;mce-FNAME&quot;>First Name </label>    <input type=&quot;text&quot; value=&quot;&quot; name=&quot;FNAME&quot; class=&quot;&quot; id=&quot;mce-FNAME&quot;></div><div class=&quot;mc-field-group&quot;> <label for=&quot;mce-LNAME&quot;>Last Name </label> <input type=&quot;text&quot; value=&quot;&quot; name=&quot;LNAME&quot; class=&quot;&quot; id=&quot;mce-LNAME&quot;></div>   <div id=&quot;mce-responses&quot; class=&quot;clear&quot;>      <div class=&quot;response&quot; id=&quot;mce-error-response&quot; style=&quot;display:none&quot;></div>     <div class=&quot;response&quot; id=&quot;mce-success-response&quot; style=&quot;display:none&quot;></div>   </div>    <!-- real people should not fill this in and expect good things - do not remove this or risk form bot signups-->    <div style=&quot;position: absolute; left: -5000px;&quot;><input type=&quot;text&quot; name=&quot;b_77142ece814d3cff52058a51f_94d040322a&quot; tabindex=&quot;-1&quot; value=&quot;&quot;></div>    <div class=&quot;clear&quot;><input type=&quot;submit&quot; value=&quot;Subscribe&quot; name=&quot;subscribe&quot; id=&quot;mc-embedded-subscribe&quot; class=&quot;button&quot;></div>    </div></form></div><script type='text/javascript' src='https://s3.amazonaws.com/downloads.mailchimp.com/js/mc-validate.js'></script><script type='text/javascript'>(function($) {window.fnames = new Array(); window.ftypes = new Array();fnames[0]='EMAIL';ftypes[0]='email';fnames[1]='FNAME';ftypes[1]='text';fnames[2]='LNAME';ftypes[2]='text';}(jQuery));var $mcj = jQuery.noConflict(true);</script><!--End mc_embed_signup-->" class="mail-list-form"> </iframe>
                                </form>
                            </div>
                </div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<script>
    $('form.form-email, form.form-newsletter').submit(function(e) {
        console.log("FFFFF")

        // return false so form submits through jQuery rather than reloading page.
        if (e.preventDefault) e.preventDefault();
        else e.returnValue = false;

        var thisForm = $(this).closest('form.form-email, form.form-newsletter'),
            error = 0,
            originalError = thisForm.attr('original-error'),
            loadingSpinner, iFrame, userEmail, userFullName, userFirstName, userLastName, successRedirect;

        // Mailchimp/Campaign Monitor Mail List Form Scripts
        iFrame = $(thisForm).find('iframe.mail-list-form');

        thisForm.find('.form-error, .form-success').remove();
        thisForm.append('<div class="form-error" style="display: none;">' + thisForm.attr('data-error') + '</div>');
        thisForm.append('<div class="form-success" style="display: none;">' + thisForm.attr('data-success') + '</div>');


        if ((iFrame.length) && (typeof iFrame.attr('srcdoc') !== "undefined") && (iFrame.attr('srcdoc') !== "")) {

            console.log('Mail list form signup detected.');
            userEmail = $(thisForm).find('.signup-email-field').val();
            userFullName = $(thisForm).find('.signup-name-field').val();
            if ($(thisForm).find('input.signup-first-name-field').length) {
                userFirstName = $(thisForm).find('input.signup-first-name-field').val();
            } else {
                userFirstName = $(thisForm).find('.signup-name-field').val();
            }
            userLastName = $(thisForm).find('.signup-last-name-field').val();

            // validateFields returns 1 on error;
            if (validateFields(thisForm) !== 1) {
                console.log('Mail list signup form validation passed.');
                console.log(userEmail);
                console.log(userLastName);
                console.log(userFirstName);
                console.log(userFullName);

                iFrame.contents().find('#mce-EMAIL, #fieldEmail').val(userEmail);
                iFrame.contents().find('#mce-LNAME, #fieldLastName').val(userLastName);
                iFrame.contents().find('#mce-FNAME, #fieldFirstName').val(userFirstName);
                iFrame.contents().find('#mce-NAME, #fieldName').val(userFullName);
                iFrame.contents().find('form').attr('target', '_blank').submit();
                successRedirect = thisForm.attr('success-redirect');
                // For some browsers, if empty `successRedirect` is undefined; for others,
                // `successRedirect` is false.  Check for both.
                if (typeof successRedirect !== typeof undefined && successRedirect !== false && successRedirect !== "") {
                    window.location = successRedirect;
                }
            } else {
                thisForm.find('.form-error').fadeIn(1000);
                setTimeout(function() {
                    thisForm.find('.form-error').fadeOut(500);
                }, 5000);
            }
        } else {
            console.log('Send email form detected.');
            if (typeof originalError !== typeof undefined && originalError !== false) {
                thisForm.find('.form-error').text(originalError);
            }


            error = validateFields(thisForm);


            if (error === 1) {
                $(this).closest('form').find('.form-error').fadeIn(200);
                setTimeout(function() {
                    $(thisForm).find('.form-error').fadeOut(500);
                }, 3000);
            } else {
                // Hide the error if one was shown
                $(this).closest('form').find('.form-error').fadeOut(200);
                // Create a new loading spinner while hiding the submit button.
                loadingSpinner = jQuery('<div />').addClass('form-loading').insertAfter($(thisForm).find('input[type="submit"]'));
                $(thisForm).find('input[type="submit"]').hide();

                jQuery.ajax({
                    type: "POST",
                    url: "mail/mail.php",
                    data: thisForm.serialize(),
                    success: function(response) {
                        // Swiftmailer always sends back a number representing numner of emails sent.
                        // If this is numeric (not Swift Mailer error text) AND greater than 0 then show success message.
                        $(thisForm).find('.form-loading').remove();

                        successRedirect = thisForm.attr('success-redirect');
                        // For some browsers, if empty `successRedirect` is undefined; for others,
                        // `successRedirect` is false.  Check for both.
                        if (typeof successRedirect !== typeof undefined && successRedirect !== false && successRedirect !== "") {
                            window.location = successRedirect;
                        }

                        $(thisForm).find('input[type="submit"]').show();
                        if ($.isNumeric(response)) {
                            if (parseInt(response) > 0) {
                                thisForm.find('input[type="text"]').val("");
                                thisForm.find('textarea').val("");
                                thisForm.find('.form-success').fadeIn(1000);

                                thisForm.find('.form-error').fadeOut(1000);
                                setTimeout(function() {
                                    thisForm.find('.form-success').fadeOut(500);
                                }, 5000);
                            }
                        }
                        // If error text was returned, put the text in the .form-error div and show it.
                        else {
                            // Keep the current error text in a data attribute on the form
                            thisForm.find('.form-error').attr('original-error', thisForm.find('.form-error').text());
                            // Show the error with the returned error text.
                            thisForm.find('.form-error').text(response).fadeIn(1000);
                            thisForm.find('.form-success').fadeOut(1000);
                        }
                    },
                    error: function(errorObject, errorText, errorHTTP) {
                        // Keep the current error text in a data attribute on the form
                        thisForm.find('.form-error').attr('original-error', thisForm.find('.form-error').text());
                        // Show the error with the returned error text.
                        thisForm.find('.form-error').text(errorHTTP).fadeIn(1000);
                        thisForm.find('.form-success').fadeOut(1000);
                        $(thisForm).find('.form-loading').remove();
                        $(thisForm).find('input[type="submit"]').show();
                    }
                });
            }
        }
        return false;
    });

    $('.validate-required, .validate-email').on('blur change', function() {
        validateFields($(this).closest('form'));
    });

    $('form').each(function() {
        if ($(this).find('.form-error').length) {
            $(this).attr('original-error', $(this).find('.form-error').text());
        }
    });

    function validateFields(form) {
            var name, error, originalErrorMessage;

            $(form).find('.validate-required[type="checkbox"]').each(function() {
                if (!$('[name="' + $(this).attr('name') + '"]:checked').length) {
                    error = 1;
                    name = $(this).attr('name').replace('[]', '');
                    form.find('.form-error').text('Please tick at least one ' + name + ' box.');
                }
            });

            $(form).find('.validate-required').each(function() {
                if ($(this).val() === '') {
                    $(this).addClass('field-error');
                    error = 1;
                } else {
                    $(this).removeClass('field-error');
                }
            });

            $(form).find('.validate-email').each(function() {
                if (!(/(.+)@(.+){2,}\.(.+){2,}/.test($(this).val()))) {
                    $(this).addClass('field-error');
                    error = 1;
                } else {
                    $(this).removeClass('field-error');
                }
            });

            if (!form.find('.field-error').length) {
                form.find('.form-error').fadeOut(1000);
            }

            return error;
        }
        // End contact form code

    // Get referrer from URL string 
    if (getURLParameter("ref")) {
        $('form.form-email').append('<input type="text" name="referrer" class="hidden" value="' + getURLParameter("ref") + '"/>');
    }

    function getURLParameter(name) {
        return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.search) || [, ""])[1].replace(/\+/g, '%20')) || null;
    }
    </script>
